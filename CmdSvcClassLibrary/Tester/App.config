<?xml version="1.0"?>
<configuration>
  <configSections>
  </configSections>
  
  <connectionStrings>
    <add name="Tester.MySettings.SurveyMasterConnectionString" connectionString="Data Source=.\DEVRENTS;AttachDbFilename=&quot;C:\Program Files\Microsoft SQL Server\MSSQL.2\MSSQL\Data\SurveyMaster.mdf&quot;;Integrated Security=True;Connect Timeout=30;User Instance=False" providerName="System.Data.SqlClient"/>
    <add name="MasterDBSvcLibr.My.MySettings.SurveyMasterConnectionString" connectionString="Data Source=.\DEVRENTS;AttachDbFilename=&quot;C:\Program Files\Microsoft SQL Server\MSSQL.2\MSSQL\Data\SurveyMaster.mdf&quot;;Integrated Security=True;Connect Timeout=30;User Instance=False" providerName="System.Data.SqlClient"/>
    <add name="EndPtDataCntxtSvcNS.My.MySettings.SurveyMasterConnectionString" connectionString="Data Source=.\DEVRENTS;AttachDbFilename=&quot;C:\Program Files\Microsoft SQL Server\MSSQL.2\MSSQL\Data\SurveyMaster.mdf&quot;;Integrated Security=True;Connect Timeout=30;User Instance=False" providerName="System.Data.SqlClient"/>
  </connectionStrings>
  
  <appSettings>
    <add key="baseaddressForMySvc" value="http://rents/happymeal80/TesterSvc"/>
    <add key="serverForMySvc" value="rents"/>
  </appSettings>
  
  <system.web>
    <compilation debug="true"/>
  </system.web>
  
  <!-- When deploying the service library project, the content of the config file must be added to the host's 
  app.config file. System.Configuration does not support config files for libraries. -->
  <system.serviceModel>
    <services>

      <service name="LogInSvcNS.LogInSvc" behaviorConfiguration="LogInSvcNS.LogInSvcBehavior">
        <endpoint address="" binding="basicHttpBinding" contract="ILogInSvc.ILogInSvc">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address="ws" binding="wsHttpBinding" contract="ILogInSvc.ILogInSvc">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://rents/hm/LogInSvc/"/>
          </baseAddresses>
        </host>
      </service>
      
      <service name="EndPtDataCntxtSvcNS.EndPtDataCntxtSvc" behaviorConfiguration="EndPtDataCntxtSvcNS.EndPtDataCntxtSvcBehavior">
        <endpoint address="ws" binding="wsHttpBinding" contract="IEndPtDataCntxtSvcNS.IEndPtDataCntxtSvc">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://rents/hm/EndPtDataCntxtSvc"/>
          </baseAddresses>
        </host>
      </service>
      
       <service name="TesterWCFSvcLibr.TesterSvc" behaviorConfiguration="TesterWCFSvcLibr.TesterSvcBehavior">
        <endpoint address="" binding="basicHttpBinding" contract="ITesterSvc.ITesterSvc">
          <identity>
            <dns value="rents"/>
          </identity>
        </endpoint>
        <!--<endpoint address="net.tcp://rents/happymeal80/TesterSvc" 
                  binding="netTcpBinding" 
                  contract="TesterWCFSvcLibr.ITesterSvc"/>-->
        <!--<endpoint address="mex"
                  binding="mexHttpBinding" 
                  contract="IMetadataExchange" />-->
        <host>
          <baseAddresses>
            <add baseAddress="http://rents/happymeal80/TesterSvc/"/>
          </baseAddresses>
        </host>
      </service>

      <service name="MasterDBSvcLibr.MasterSurveyDBSvc" behaviorConfiguration="MasterDBSvcLibr.Service1Behavior">
        <host>
          <baseAddresses>
            <add baseAddress="http://rents/hm/MasterSurveyDB/"/>
          </baseAddresses>
        </host>
        <endpoint address="rdispatchersvc" binding="basicHttpBinding" contract="IMasterSurveyDBSvcNS.IMasterSurveyDBSvc">
          <identity>
            <dns value="rents"/>
          </identity>
        </endpoint>
        <endpoint address="admin" binding="basicHttpBinding" contract="IMasterSurveyDBSvcNS.IMasterSurveyDBSvc">
          <identity>
            <dns value="rents"/>
          </identity>
        </endpoint>
        <!--<endpoint address="ws" bindingConfiguration="WSHttpBinding_ICommandSvc"
                  binding="wsHttpBinding" 
                  contract="IMasterSurveyDBSvcNS.IMasterSurveyDBSvc">
          <identity>
            <dns value="rents" />
          </identity>
        </endpoint>-->
        <!--<endpoint address="mex" 
                  binding="mexHttpBinding" 
                  contract="IMetadataExchange" />-->
      </service>

       <service name="CustomerDBSvc.CustomerDBSvc" behaviorConfiguration="CustomerDBSvc.Service1Behavior">
        <!--<endpoint address="ws"
                  binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_ICommandSvc"
                  contract="ICustomerDBSvc.ICustomerDBSvc">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex"
                  binding="mexHttpBinding"
                  contract="IMetadataExchange" />-->
        <!--<host>
          <baseAddresses>
            <add baseAddress="http://rents/hm/CustomerDBSvc/" />
          </baseAddresses>
        </host>-->
      </service>

      <service name="PageItemColxnServicesLibr.PgItemColxnSvc" behaviorConfiguration="PageItemColxnServicesLibr.PgItemColxnSvcBehavior">
        <!--<endpoint address="" 
                  binding="basicHttpBinding" 
                  contract="IPageItemsSvcNS.IPgItemColxnSvc" 
                  bindingConfiguration="binding1">
          <identity>
            <dns value="rents" />
          </identity>
        </endpoint>-->
        <!--<endpoint address="mex" 
                  binding="mexHttpBinding" 
                  contract="IMetadataExchange" />-->
        <!--<host>
          <baseAddresses>
            <add baseAddress="http://rents/hm/PgItemColxnSvc/" />
          </baseAddresses>
        </host>-->
        
        <!--<endpoint address="" binding="basicHttpBinding" contract="PageItemColxnServicesLibr.IPgItemColxnSvc" bindingConfiguration="binding1">
          <identity>
            <dns value="rents" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://rents/hm/PgItemColxnSvc/" />
          </baseAddresses>
        </host>-->
      </service>

      <service name="RespProviderSvcLibr.RespProviderSvc" behaviorConfiguration="RespProviderSvcLibr.RespProviderSvcBehavior">
        <!--<endpoint address=""
                  binding="basicHttpBinding"
                  contract="IRespProviderSvcNS.IRespProviderSvc"
                  bindingConfiguration="binding1">
          <identity>
            <dns value="rents" />
          </identity>
        </endpoint>
        <endpoint address="mex"
                  binding="mexHttpBinding"
                  contract="IMetadataExchange" />-->
        <!--<host>
          <baseAddresses>
            <add baseAddress="http://rents/hm/RespProviderSvc/" />
          </baseAddresses>
        </host>
      </service>-->
      
       <!--<service behaviorConfiguration="CmdSvcClassLibrary.CommandSvcBehavior"
        name="CmdSvcClassLibrary.CommandSvc">
          <endpoint address="" binding="wsHttpBinding" contract="ICommandSvcNS.ICommandSvc">
            <identity>
              <dns value="rents" />
            </identity>
          </endpoint>
          <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
          <host>
            <baseAddresses>
              <add baseAddress="http://rents/hm/TesterSvc/CommandSvc/" />
            </baseAddresses>
          </host>-->
        </service>

      <service name="WCFSvcLibr1.RespDispatcherSvc" behaviorConfiguration="WCFSvcLibr1.RespDispatcherSvcBehavior">
        <!-- Define NetMsmqEndpoint -->
        <endpoint address="net.msmq://rents/private/dispatcherresponses" binding="netMsmqBinding" bindingConfiguration="NetMsmqBinding_IRespDispatcherSvc" contract="IRespDispatcherSvcNS.IRespDispatcherSvc"/>

        <!--<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />-->

        <host>
          <baseAddresses>
            <add baseAddress="http://rents/hm/RespDispatcherSvc/"/>
          </baseAddresses>
        </host>

        <!--<endpoint address=""  binding="wsHttpBinding" contract="WCFSvcLibr1.IRespDispatcherSvc">
                    <identity>
                      <dns value="rents"/>
                    </identity>
                </endpoint>-->
      </service>

      <service name="ResponsePostingSvcLibr1.PostResponsetoSurveySvc" behaviorConfiguration="ResponsePostingSvcLibr1.PostResponsetoSurveySvcBehavior">
        <!--is done at runtime in CommandSupport.Startcmd...-->
        <!-- Define NetMsmqEndpoint -->
        <!--<endpoint address="net.msmq://rents/private/happymealresponses"
                  binding="netMsmqBinding"
                  bindingConfiguration="NetMsmqBinding_IPostResponsetoSurveySvc"
                  contract="IPostResponsetoSurveySvcNS.IPostResponsetoSurveySvc"/>-->
        <host>
          <baseAddresses>
            <add baseAddress="net.msmq://rents/private/happymealresponses"/>
            <!--<add baseAddress="http://rents/hm/PostResponsetoSurveySvc/"/>-->
          </baseAddresses>
        </host>
      </service>
    </services>
    
    <behaviors>
      <serviceBehaviors>
        <behavior name="LogInSvcNS.LogInSvcBehavior">
          <serviceMetadata httpGetEnabled="True"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>

        <behavior name="EndPtDataCntxtSvcNS.EndPtDataCntxtSvcBehavior">
          <serviceMetadata httpGetEnabled="True"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
        
        <behavior name="TesterWCFSvcLibr.TesterSvcBehavior">
          <!-- To avoid disclosing metadata information, 
          set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="false"/>
          <!-- To receive exception details in faults for debugging purposes, 
          set the value below to true.  Set to false before deployment 
          to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="False"/>
        </behavior>

        <behavior name="MasterDBSvcLibr.Service1Behavior">
          <serviceMetadata httpGetEnabled="false"/>
          <serviceDebug includeExceptionDetailInFaults="False"/>
        </behavior>

        <behavior name="CustomerDBSvc.Service1Behavior">
            <serviceMetadata httpGetEnabled="false"/>
            <serviceDebug includeExceptionDetailInFaults="False"/>
          </behavior>

        <behavior name="PageItemColxnServicesLibr.PgItemColxnSvcBehavior">
          <!-- To avoid disclosing metadata information, 
          set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="false"/>
          <!-- To receive exception details in faults for debugging purposes, 
          set the value below to true.  Set to false before deployment 
          to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
        
        <behavior name="RespProviderSvcLibr.RespProviderSvcBehavior">
          <serviceMetadata httpGetEnabled="false"/>
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>

        <behavior name="WCFSvcLibr1.RespDispatcherSvcBehavior">
          <serviceMetadata httpGetEnabled="false"/>
          <serviceDebug includeExceptionDetailInFaults="False"/>
        </behavior>

        <behavior name="ResponsePostingSvcLibr1.PostResponsetoSurveySvcBehavior">
          <serviceMetadata httpGetEnabled="false"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>

        <behavior name="CmdSvcClassLibrary.CommandSvcBehavior">
          <serviceMetadata httpGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="True"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <bindings>
      <basicHttpBinding>
        <binding name="binding1" maxReceivedMessageSize="60000000" maxBufferSize="60000000" maxBufferPoolSize="60000000">
          <readerQuotas maxStringContentLength="60000000" maxArrayLength="60000000" maxNameTableCharCount="60000000" maxBytesPerRead="60000000" maxDepth="40000"/>
          <security mode="None">
            <!--<message clientCredentialType="UserName" algorithmSuite="Default"/>-->
          </security>
        </binding>
       
        <binding name="BasicHttpBinding_ICacheTesterSvc" maxReceivedMessageSize="6000000">
          <readerQuotas maxStringContentLength="6000000"/>
        </binding>

        <binding name="BasicHttpBinding_ILoginSvc" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferSize="65536" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          <security mode="None">
            <transport clientCredentialType="None" proxyCredentialType="None" realm=""/>
            <message clientCredentialType="UserName" algorithmSuite="Default"/>
          </security>
        </binding>
      </basicHttpBinding>

      <wsHttpBinding>
        <binding name="WSHttpBinding_ICommandSvc" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="6000000" maxReceivedMessageSize="600000" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
          <readerQuotas maxDepth="32" maxStringContentLength="600000" maxArrayLength="600000" maxBytesPerRead="10000" maxNameTableCharCount="600000"/>
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false"/>
          <security mode="Message">
            <transport clientCredentialType="Windows" proxyCredentialType="None" realm=""/>
            <message clientCredentialType="Windows" negotiateServiceCredential="true" algorithmSuite="Default" establishSecurityContext="true"/>
          </security>
        </binding>
      </wsHttpBinding>
      
      <netMsmqBinding>
        <!--Probably don't need bot of these bindingconfigs....just reference the same one in the -->
        <binding name="NetMsmqBinding_IRespDispatcherSvc" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" deadLetterQueue="System" durable="true" exactlyOnce="true" maxReceivedMessageSize="65536" maxRetryCycles="0" receiveErrorHandling="Fault" receiveRetryCount="5" retryCycleDelay="00:30:00" timeToLive="1.00:00:00" useSourceJournal="false" useMsmqTracing="false" queueTransferProtocol="Native" maxBufferPoolSize="524288" useActiveDirectory="false">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          <security mode="None">
            <transport msmqAuthenticationMode="WindowsDomain" msmqEncryptionAlgorithm="RC4Stream" msmqProtectionLevel="Sign" msmqSecureHashAlgorithm="Sha1"/>
            <message clientCredentialType="Windows"/>
          </security>
        </binding>

        <binding name="NetMsmqBinding_IPostResponsetoSurveySvc" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" deadLetterQueue="System" durable="true" exactlyOnce="true" maxReceivedMessageSize="65536" maxRetryCycles="2" receiveErrorHandling="Fault" receiveRetryCount="5" retryCycleDelay="00:30:00" timeToLive="1.00:00:00" useSourceJournal="false" useMsmqTracing="false" queueTransferProtocol="Native" maxBufferPoolSize="524288" useActiveDirectory="false">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          <security mode="None">
            <transport msmqAuthenticationMode="WindowsDomain" msmqEncryptionAlgorithm="RC4Stream" msmqProtectionLevel="Sign" msmqSecureHashAlgorithm="Sha1"/>
            <message clientCredentialType="Windows"/>
          </security>
        </binding>
      </netMsmqBinding>
    </bindings>

    <client>
      <endpoint address="http://rents/hm/LogInSvc/ws" binding="wsHttpBinding" contract="ILogInSvc.ILogInSvc" name="ws_ILogInSvc"/>
      
      <endpoint address="http://rents/hm/EndPtDataCntxtSvc/ws/" binding="wsHttpBinding" contract="IEndPtDataCntxtSvcNS.IEndPtDataCntxtSvc" name="ws_IEndPtDataCntxtSvc"/>
       
      <endpoint address="http://rents/happymeal80/TesterSvc/" binding="basicHttpBinding" contract="ITesterSvc.ITesterSvc" bindingConfiguration="binding1" name="BasicHttpBinding_ICacheTesterSvc"/>
     
      <endpoint address="http://rents/hm/CustomerDBSvc/ws/" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_ICommandSvc" contract="ICustomerDBSvc.ICustomerDBSvc" name="wsHttpBinding_ICustomerDBSvc"/>

      <endpoint address="http://rents/hm/CustomerDBSvc/" binding="basicHttpBinding" contract="ICustomerDBSvc.ICustomerDBSvc" name="basic_ICustomerDBSvc"/>

      <endpoint address="http://rents/hm/PgItemColxnSvc/" binding="basicHttpBinding" bindingConfiguration="binding1" contract="IPageItemsSvcNS.IPgItemColxnSvc" name="BasicHttpBinding_IPgItemColxnSvc"/>

      <!--<endpoint address="http://rents/hm/RespProviderSvc/"
               binding="basicHttpBinding"
               contract="IRespProviderSvcNS.IRespProviderSvc"
               name="BasicHttpBinding_IRespProviderSvc" />-->

      <endpoint address="net.msmq://localhost/private/dispatcherresponses" binding="netMsmqBinding" contract="RespDispatchSvc.IRespDispatcherSvc" bindingConfiguration="NetMsmqBinding_IRespDispatcherSvc" name="NetMsmqBinding_IRespDispatcherSvc"/>

      <!--RespDispatcher gets the bindingconfig from here...NOT...-->
      <!--<endpoint address=""
                binding="netMsmqBinding" 
                contract="IPostResponsetoSurveySvcNS.IPostResponsetoSurveySvc"
                bindingConfiguration="NetMsmqBinding_IPostResponsetoSurveySvc"
                name="NetMsmqBinding_IPostResponsetoSurveySvc" />-->
      
      
      <!--CommandSvc(of TService) clientEndpoints-->
      <endpoint address="http://rents/hm/MasterSurveyDB/CommandSvc/" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_ICommandSvc" contract="ICommandSvcNS.ICommandSvc" name="ws_IMasterSurveyDBSvcNS_ICommandSvc"/>
        
      <endpoint address="http://rents/hm/PgItemColxnSvc/CommandSvc/" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_ICommandSvc" contract="ICommandSvcNS.ICommandSvc" name="ws_IPageItemsSvcNS_ICommandSvc"/>
       
      <endpoint address="http://rents/hm/RespProviderSvc/CommandSvc/" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_ICommandSvc" contract="ICommandSvcNS.ICommandSvc" name="ws_IRespProviderSvcNS_ICommandSvc"/>
        
      <endpoint address="http://rents/hm/CustomerDBSvc/CommandSvc/" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_ICommandSvc" contract="ICommandSvcNS.ICommandSvc" name="ws_ICustomerDBSvc_ICommandSvc"/>

      <endpoint address="http://rents/hm/PostResponsetoSurveySvc/CommandSvc/" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding_ICommandSvc" contract="ICommandSvcNS.ICommandSvc" name="ws_IPostResponsetoSurveySvcNS_ICommandSvc"/>
    </client>
  </system.serviceModel>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/></startup></configuration>
