'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.225
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Survey4DataStore")>  _
Partial Public Class L2S_PgItemColxnSDSDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertPageContentModel(instance As PageContentModel)
    End Sub
  Partial Private Sub UpdatePageContentModel(instance As PageContentModel)
    End Sub
  Partial Private Sub DeletePageContentModel(instance As PageContentModel)
    End Sub
  Partial Private Sub InsertPageContentElement(instance As PageContentElement)
    End Sub
  Partial Private Sub UpdatePageContentElement(instance As PageContentElement)
    End Sub
  Partial Private Sub DeletePageContentElement(instance As PageContentElement)
    End Sub
  Partial Private Sub InsertQuestOptionItemModel(instance As QuestOptionItemModel)
    End Sub
  Partial Private Sub UpdateQuestOptionItemModel(instance As QuestOptionItemModel)
    End Sub
  Partial Private Sub DeleteQuestOptionItemModel(instance As QuestOptionItemModel)
    End Sub
  Partial Private Sub InsertQuestionOptionSetModel(instance As QuestionOptionSetModel)
    End Sub
  Partial Private Sub UpdateQuestionOptionSetModel(instance As QuestionOptionSetModel)
    End Sub
  Partial Private Sub DeleteQuestionOptionSetModel(instance As QuestionOptionSetModel)
    End Sub
  Partial Private Sub InsertPgItemModel(instance As PgItemModel)
    End Sub
  Partial Private Sub UpdatePgItemModel(instance As PgItemModel)
    End Sub
  Partial Private Sub DeletePgItemModel(instance As PgItemModel)
    End Sub
  #End Region
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property PageContentModels() As System.Data.Linq.Table(Of PageContentModel)
		Get
			Return Me.GetTable(Of PageContentModel)
		End Get
	End Property
	
	Public ReadOnly Property PageContentElements() As System.Data.Linq.Table(Of PageContentElement)
		Get
			Return Me.GetTable(Of PageContentElement)
		End Get
	End Property
	
	Public ReadOnly Property QuestOptionItemModels() As System.Data.Linq.Table(Of QuestOptionItemModel)
		Get
			Return Me.GetTable(Of QuestOptionItemModel)
		End Get
	End Property
	
	Public ReadOnly Property QuestionOptionSetModels() As System.Data.Linq.Table(Of QuestionOptionSetModel)
		Get
			Return Me.GetTable(Of QuestionOptionSetModel)
		End Get
	End Property
	
	Public ReadOnly Property PgItemModels() As System.Data.Linq.Table(Of PgItemModel)
		Get
			Return Me.GetTable(Of PgItemModel)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PageContentModel")>  _
Partial Public Class PageContentModel
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PageContentModelID As Integer
	
	Private _PgItemModelID As Integer
	
	Private _HostingControlSize As String
	
	Private _Model As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPageContentModelIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPageContentModelIDChanged()
    End Sub
    Partial Private Sub OnPgItemModelIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPgItemModelIDChanged()
    End Sub
    Partial Private Sub OnHostingControlSizeChanging(value As String)
    End Sub
    Partial Private Sub OnHostingControlSizeChanged()
    End Sub
    Partial Private Sub OnModelChanging(value As String)
    End Sub
    Partial Private Sub OnModelChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PageContentModelID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PageContentModelID() As Integer
		Get
			Return Me._PageContentModelID
		End Get
		Set
			If ((Me._PageContentModelID = value)  _
						= false) Then
				Me.OnPageContentModelIDChanging(value)
				Me.SendPropertyChanging
				Me._PageContentModelID = value
				Me.SendPropertyChanged("PageContentModelID")
				Me.OnPageContentModelIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PgItemModelID", DbType:="Int NOT NULL")>  _
	Public Property PgItemModelID() As Integer
		Get
			Return Me._PgItemModelID
		End Get
		Set
			If ((Me._PgItemModelID = value)  _
						= false) Then
				Me.OnPgItemModelIDChanging(value)
				Me.SendPropertyChanging
				Me._PgItemModelID = value
				Me.SendPropertyChanged("PgItemModelID")
				Me.OnPgItemModelIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HostingControlSize", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property HostingControlSize() As String
		Get
			Return Me._HostingControlSize
		End Get
		Set
			If (String.Equals(Me._HostingControlSize, value) = false) Then
				Me.OnHostingControlSizeChanging(value)
				Me.SendPropertyChanging
				Me._HostingControlSize = value
				Me.SendPropertyChanged("HostingControlSize")
				Me.OnHostingControlSizeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Model", DbType:="VarChar(MAX)")>  _
	Public Property Model() As String
		Get
			Return Me._Model
		End Get
		Set
			If (String.Equals(Me._Model, value) = false) Then
				Me.OnModelChanging(value)
				Me.SendPropertyChanging
				Me._Model = value
				Me.SendPropertyChanged("Model")
				Me.OnModelChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PageContentElement")>  _
Partial Public Class PageContentElement
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PageContentElementID As Integer
	
	Private _PageContentModelID As Integer
	
	Private _PresenterTypeName As String
	
	Private _ViewModel As String
	
	Private _Model As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPageContentElementIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPageContentElementIDChanged()
    End Sub
    Partial Private Sub OnPageContentModelIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPageContentModelIDChanged()
    End Sub
    Partial Private Sub OnPresenterTypeNameChanging(value As String)
    End Sub
    Partial Private Sub OnPresenterTypeNameChanged()
    End Sub
    Partial Private Sub OnViewModelChanging(value As String)
    End Sub
    Partial Private Sub OnViewModelChanged()
    End Sub
    Partial Private Sub OnModelChanging(value As String)
    End Sub
    Partial Private Sub OnModelChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PageContentElementID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PageContentElementID() As Integer
		Get
			Return Me._PageContentElementID
		End Get
		Set
			If ((Me._PageContentElementID = value)  _
						= false) Then
				Me.OnPageContentElementIDChanging(value)
				Me.SendPropertyChanging
				Me._PageContentElementID = value
				Me.SendPropertyChanged("PageContentElementID")
				Me.OnPageContentElementIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PageContentModelID", DbType:="Int NOT NULL")>  _
	Public Property PageContentModelID() As Integer
		Get
			Return Me._PageContentModelID
		End Get
		Set
			If ((Me._PageContentModelID = value)  _
						= false) Then
				Me.OnPageContentModelIDChanging(value)
				Me.SendPropertyChanging
				Me._PageContentModelID = value
				Me.SendPropertyChanged("PageContentModelID")
				Me.OnPageContentModelIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PresenterTypeName", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property PresenterTypeName() As String
		Get
			Return Me._PresenterTypeName
		End Get
		Set
			If (String.Equals(Me._PresenterTypeName, value) = false) Then
				Me.OnPresenterTypeNameChanging(value)
				Me.SendPropertyChanging
				Me._PresenterTypeName = value
				Me.SendPropertyChanged("PresenterTypeName")
				Me.OnPresenterTypeNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ViewModel", DbType:="VarChar(MAX)")>  _
	Public Property ViewModel() As String
		Get
			Return Me._ViewModel
		End Get
		Set
			If (String.Equals(Me._ViewModel, value) = false) Then
				Me.OnViewModelChanging(value)
				Me.SendPropertyChanging
				Me._ViewModel = value
				Me.SendPropertyChanged("ViewModel")
				Me.OnViewModelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Model", DbType:="VarChar(MAX)")>  _
	Public Property Model() As String
		Get
			Return Me._Model
		End Get
		Set
			If (String.Equals(Me._Model, value) = false) Then
				Me.OnModelChanging(value)
				Me.SendPropertyChanging
				Me._Model = value
				Me.SendPropertyChanged("Model")
				Me.OnModelChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.QuestOptionItemModel")>  _
Partial Public Class QuestOptionItemModel
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _QuestOptionItemModelID As Integer
	
	Private _PgItemModelID As Integer
	
	Private _QuestOptionSetModelID As Integer
	
	Private _SelectorConfiguration As Integer
	
	Private _OptionItemObject As String
	
	Private _QOptionItemText As String
	
	Private _OptionIsSelected As Boolean
	
	Private _Model As String
	
	Private _SDSResponseModelID As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnQuestOptionItemModelIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnQuestOptionItemModelIDChanged()
    End Sub
    Partial Private Sub OnPgItemModelIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPgItemModelIDChanged()
    End Sub
    Partial Private Sub OnQuestOptionSetModelIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnQuestOptionSetModelIDChanged()
    End Sub
    Partial Private Sub OnSelectorConfigurationChanging(value As Integer)
    End Sub
    Partial Private Sub OnSelectorConfigurationChanged()
    End Sub
    Partial Private Sub OnOptionItemObjectChanging(value As String)
    End Sub
    Partial Private Sub OnOptionItemObjectChanged()
    End Sub
    Partial Private Sub OnQOptionItemTextChanging(value As String)
    End Sub
    Partial Private Sub OnQOptionItemTextChanged()
    End Sub
    Partial Private Sub OnOptionIsSelectedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOptionIsSelectedChanged()
    End Sub
    Partial Private Sub OnModelChanging(value As String)
    End Sub
    Partial Private Sub OnModelChanged()
    End Sub
    Partial Private Sub OnSDSResponseModelIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSDSResponseModelIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuestOptionItemModelID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property QuestOptionItemModelID() As Integer
		Get
			Return Me._QuestOptionItemModelID
		End Get
		Set
			If ((Me._QuestOptionItemModelID = value)  _
						= false) Then
				Me.OnQuestOptionItemModelIDChanging(value)
				Me.SendPropertyChanging
				Me._QuestOptionItemModelID = value
				Me.SendPropertyChanged("QuestOptionItemModelID")
				Me.OnQuestOptionItemModelIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PgItemModelID", DbType:="Int NOT NULL")>  _
	Public Property PgItemModelID() As Integer
		Get
			Return Me._PgItemModelID
		End Get
		Set
			If ((Me._PgItemModelID = value)  _
						= false) Then
				Me.OnPgItemModelIDChanging(value)
				Me.SendPropertyChanging
				Me._PgItemModelID = value
				Me.SendPropertyChanged("PgItemModelID")
				Me.OnPgItemModelIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuestOptionSetModelID", DbType:="Int NOT NULL")>  _
	Public Property QuestOptionSetModelID() As Integer
		Get
			Return Me._QuestOptionSetModelID
		End Get
		Set
			If ((Me._QuestOptionSetModelID = value)  _
						= false) Then
				Me.OnQuestOptionSetModelIDChanging(value)
				Me.SendPropertyChanging
				Me._QuestOptionSetModelID = value
				Me.SendPropertyChanged("QuestOptionSetModelID")
				Me.OnQuestOptionSetModelIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SelectorConfiguration", DbType:="Int NOT NULL")>  _
	Public Property SelectorConfiguration() As Integer
		Get
			Return Me._SelectorConfiguration
		End Get
		Set
			If ((Me._SelectorConfiguration = value)  _
						= false) Then
				Me.OnSelectorConfigurationChanging(value)
				Me.SendPropertyChanging
				Me._SelectorConfiguration = value
				Me.SendPropertyChanged("SelectorConfiguration")
				Me.OnSelectorConfigurationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OptionItemObject", DbType:="VarChar(MAX)")>  _
	Public Property OptionItemObject() As String
		Get
			Return Me._OptionItemObject
		End Get
		Set
			If (String.Equals(Me._OptionItemObject, value) = false) Then
				Me.OnOptionItemObjectChanging(value)
				Me.SendPropertyChanging
				Me._OptionItemObject = value
				Me.SendPropertyChanged("OptionItemObject")
				Me.OnOptionItemObjectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QOptionItemText", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property QOptionItemText() As String
		Get
			Return Me._QOptionItemText
		End Get
		Set
			If (String.Equals(Me._QOptionItemText, value) = false) Then
				Me.OnQOptionItemTextChanging(value)
				Me.SendPropertyChanging
				Me._QOptionItemText = value
				Me.SendPropertyChanged("QOptionItemText")
				Me.OnQOptionItemTextChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OptionIsSelected", DbType:="Bit NOT NULL")>  _
	Public Property OptionIsSelected() As Boolean
		Get
			Return Me._OptionIsSelected
		End Get
		Set
			If ((Me._OptionIsSelected = value)  _
						= false) Then
				Me.OnOptionIsSelectedChanging(value)
				Me.SendPropertyChanging
				Me._OptionIsSelected = value
				Me.SendPropertyChanged("OptionIsSelected")
				Me.OnOptionIsSelectedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Model", DbType:="VarChar(MAX)")>  _
	Public Property Model() As String
		Get
			Return Me._Model
		End Get
		Set
			If (String.Equals(Me._Model, value) = false) Then
				Me.OnModelChanging(value)
				Me.SendPropertyChanging
				Me._Model = value
				Me.SendPropertyChanged("Model")
				Me.OnModelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDSResponseModelID", DbType:="Int NOT NULL")>  _
	Public Property SDSResponseModelID() As Integer
		Get
			Return Me._SDSResponseModelID
		End Get
		Set
			If ((Me._SDSResponseModelID = value)  _
						= false) Then
				Me.OnSDSResponseModelIDChanging(value)
				Me.SendPropertyChanging
				Me._SDSResponseModelID = value
				Me.SendPropertyChanged("SDSResponseModelID")
				Me.OnSDSResponseModelIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.QuestionOptionSetModel")>  _
Partial Public Class QuestionOptionSetModel
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _QuestOptionSetModelID As Integer
	
	Private _PgItemModelID As Integer
	
	Private _PageContentElementID As Integer
	
	Private _LayoutConfiguration As Integer
	
	Private _UniGridColumns As Integer
	
	Private _UniGridRows As Integer
	
	Private _Model As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnQuestOptionSetModelIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnQuestOptionSetModelIDChanged()
    End Sub
    Partial Private Sub OnPgItemModelIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPgItemModelIDChanged()
    End Sub
    Partial Private Sub OnPageContentElementIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPageContentElementIDChanged()
    End Sub
    Partial Private Sub OnLayoutConfigurationChanging(value As Integer)
    End Sub
    Partial Private Sub OnLayoutConfigurationChanged()
    End Sub
    Partial Private Sub OnUniGridColumnsChanging(value As Integer)
    End Sub
    Partial Private Sub OnUniGridColumnsChanged()
    End Sub
    Partial Private Sub OnUniGridRowsChanging(value As Integer)
    End Sub
    Partial Private Sub OnUniGridRowsChanged()
    End Sub
    Partial Private Sub OnModelChanging(value As String)
    End Sub
    Partial Private Sub OnModelChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuestOptionSetModelID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property QuestOptionSetModelID() As Integer
		Get
			Return Me._QuestOptionSetModelID
		End Get
		Set
			If ((Me._QuestOptionSetModelID = value)  _
						= false) Then
				Me.OnQuestOptionSetModelIDChanging(value)
				Me.SendPropertyChanging
				Me._QuestOptionSetModelID = value
				Me.SendPropertyChanged("QuestOptionSetModelID")
				Me.OnQuestOptionSetModelIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PgItemModelID", DbType:="Int NOT NULL")>  _
	Public Property PgItemModelID() As Integer
		Get
			Return Me._PgItemModelID
		End Get
		Set
			If ((Me._PgItemModelID = value)  _
						= false) Then
				Me.OnPgItemModelIDChanging(value)
				Me.SendPropertyChanging
				Me._PgItemModelID = value
				Me.SendPropertyChanged("PgItemModelID")
				Me.OnPgItemModelIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PageContentElementID", DbType:="Int NOT NULL")>  _
	Public Property PageContentElementID() As Integer
		Get
			Return Me._PageContentElementID
		End Get
		Set
			If ((Me._PageContentElementID = value)  _
						= false) Then
				Me.OnPageContentElementIDChanging(value)
				Me.SendPropertyChanging
				Me._PageContentElementID = value
				Me.SendPropertyChanged("PageContentElementID")
				Me.OnPageContentElementIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LayoutConfiguration", DbType:="Int NOT NULL")>  _
	Public Property LayoutConfiguration() As Integer
		Get
			Return Me._LayoutConfiguration
		End Get
		Set
			If ((Me._LayoutConfiguration = value)  _
						= false) Then
				Me.OnLayoutConfigurationChanging(value)
				Me.SendPropertyChanging
				Me._LayoutConfiguration = value
				Me.SendPropertyChanged("LayoutConfiguration")
				Me.OnLayoutConfigurationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UniGridColumns", DbType:="Int NOT NULL")>  _
	Public Property UniGridColumns() As Integer
		Get
			Return Me._UniGridColumns
		End Get
		Set
			If ((Me._UniGridColumns = value)  _
						= false) Then
				Me.OnUniGridColumnsChanging(value)
				Me.SendPropertyChanging
				Me._UniGridColumns = value
				Me.SendPropertyChanged("UniGridColumns")
				Me.OnUniGridColumnsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UniGridRows", DbType:="Int NOT NULL")>  _
	Public Property UniGridRows() As Integer
		Get
			Return Me._UniGridRows
		End Get
		Set
			If ((Me._UniGridRows = value)  _
						= false) Then
				Me.OnUniGridRowsChanging(value)
				Me.SendPropertyChanging
				Me._UniGridRows = value
				Me.SendPropertyChanged("UniGridRows")
				Me.OnUniGridRowsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Model", DbType:="VarChar(MAX)")>  _
	Public Property Model() As String
		Get
			Return Me._Model
		End Get
		Set
			If (String.Equals(Me._Model, value) = false) Then
				Me.OnModelChanging(value)
				Me.SendPropertyChanging
				Me._Model = value
				Me.SendPropertyChanged("Model")
				Me.OnModelChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PgItemModel")>  _
Partial Public Class PgItemModel
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PageItemModelID As Integer
	
	Private _SurveyID As Integer
	
	Private _SurveyName As String
	
	Private _Property1Value As String
	
	Private _PageNumber As String
	
	Private _PageOptions As String
	
	Private _Model As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPageItemModelIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPageItemModelIDChanged()
    End Sub
    Partial Private Sub OnSurveyIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSurveyIDChanged()
    End Sub
    Partial Private Sub OnSurveyNameChanging(value As String)
    End Sub
    Partial Private Sub OnSurveyNameChanged()
    End Sub
    Partial Private Sub OnProperty1ValueChanging(value As String)
    End Sub
    Partial Private Sub OnProperty1ValueChanged()
    End Sub
    Partial Private Sub OnPageNumberChanging(value As String)
    End Sub
    Partial Private Sub OnPageNumberChanged()
    End Sub
    Partial Private Sub OnPageOptionsChanging(value As String)
    End Sub
    Partial Private Sub OnPageOptionsChanged()
    End Sub
    Partial Private Sub OnModelChanging(value As String)
    End Sub
    Partial Private Sub OnModelChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PageItemModelID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PageItemModelID() As Integer
		Get
			Return Me._PageItemModelID
		End Get
		Set
			If ((Me._PageItemModelID = value)  _
						= false) Then
				Me.OnPageItemModelIDChanging(value)
				Me.SendPropertyChanging
				Me._PageItemModelID = value
				Me.SendPropertyChanged("PageItemModelID")
				Me.OnPageItemModelIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SurveyID", DbType:="Int NOT NULL")>  _
	Public Property SurveyID() As Integer
		Get
			Return Me._SurveyID
		End Get
		Set
			If ((Me._SurveyID = value)  _
						= false) Then
				Me.OnSurveyIDChanging(value)
				Me.SendPropertyChanging
				Me._SurveyID = value
				Me.SendPropertyChanged("SurveyID")
				Me.OnSurveyIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SurveyName", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property SurveyName() As String
		Get
			Return Me._SurveyName
		End Get
		Set
			If (String.Equals(Me._SurveyName, value) = false) Then
				Me.OnSurveyNameChanging(value)
				Me.SendPropertyChanging
				Me._SurveyName = value
				Me.SendPropertyChanged("SurveyName")
				Me.OnSurveyNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Property1Value", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Property1Value() As String
		Get
			Return Me._Property1Value
		End Get
		Set
			If (String.Equals(Me._Property1Value, value) = false) Then
				Me.OnProperty1ValueChanging(value)
				Me.SendPropertyChanging
				Me._Property1Value = value
				Me.SendPropertyChanged("Property1Value")
				Me.OnProperty1ValueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PageNumber", DbType:="VarChar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property PageNumber() As String
		Get
			Return Me._PageNumber
		End Get
		Set
			If (String.Equals(Me._PageNumber, value) = false) Then
				Me.OnPageNumberChanging(value)
				Me.SendPropertyChanging
				Me._PageNumber = value
				Me.SendPropertyChanged("PageNumber")
				Me.OnPageNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PageOptions", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property PageOptions() As String
		Get
			Return Me._PageOptions
		End Get
		Set
			If (String.Equals(Me._PageOptions, value) = false) Then
				Me.OnPageOptionsChanging(value)
				Me.SendPropertyChanging
				Me._PageOptions = value
				Me.SendPropertyChanged("PageOptions")
				Me.OnPageOptionsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Model", DbType:="VarChar(MAX)")>  _
	Public Property Model() As String
		Get
			Return Me._Model
		End Get
		Set
			If (String.Equals(Me._Model, value) = false) Then
				Me.OnModelChanging(value)
				Me.SendPropertyChanging
				Me._Model = value
				Me.SendPropertyChanged("Model")
				Me.OnModelChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
