<?xml version="1.0"?>
<configuration>
  <configSections>
  </configSections>
  <connectionStrings>
    <add name="SurveyMasterConnectionString" connectionString="Data Source=vsfirst\DEVEXPRESS2008R2;Database=SurveyMaster;Integrated Security=True;Connect Timeout=30;User Instance=False" providerName="System.Data.SqlClient"/>
    <add name="PerceptricsEmailConnectionString" connectionString="Data Source=vsfirst\DEVEXPRESS2008R2;Database=PerceptricsEmail;Integrated Security=True;Connect Timeout=30;User Instance=False" providerName="System.Data.SqlClient" />

    <add name="Tester.MySettings.SurveyMasterConnectionString" connectionString="Data Source=vsfirst\DEVEXPRESS2008R2;Database=SurveyMaster;Integrated Security=True;Connect Timeout=30;User Instance=False" providerName="System.Data.SqlClient"/>
    <!--<add name="MasterDBSvcLibr.My.MySettings.SurveyMasterConnectionString" connectionString="Data Source=LEASES\DEVRENTS;AttachDbFilename=&quot;C:\Program Files\Microsoft SQL Server\MSSQL.1\MSSQL\Data\SurveyMaster.mdf&quot;;Integrated Security=True;Connect Timeout=30;User Instance=False" providerName="System.Data.SqlClient" />
    <add name="EndPtDataCntxtSvcNS.My.MySettings.SurveyMasterConnectionString" connectionString="Data Source=LEASES\DEVRENTS;AttachDbFilename=&quot;C:\Program Files\Microsoft SQL Server\MSSQL.1\MSSQL\Data\SurveyMaster.mdf&quot;;Integrated Security=True;Connect Timeout=30;User Instance=False" providerName="System.Data.SqlClient" />-->
  </connectionStrings>
  <appSettings>
    <!--NEW SUBSCRIBER SqlServerOperations Strings-->
    <add key="SourceServerInstanceName" value="vsfirst\DEVEXPRESS2008R2"/>
    <add key="DestinationServerInstanceName" value="vsfirst\DEVEXPRESS2008R2"/>
    <add key="NewSubscriberSurveyMasterDbName" value="ExxonSurveyMaster.bak"/>
    <add key="NewSubscriberDataStoreDbName" value="ExxonSurvey4DataStore.bak"/>
    <add key="SubscriberRDENTQueueURI" value="net.msmq://localhost/private/exxonresponses"/>
    <add key="SubscriberRDENTQueueName" value=".\private$\exxonResponses"/>
    <add key="DefaultPrivBMask_NewSubscriber" value="8128"/>
    <!-- END of NEW SUBSCRIBER SqlServerOperations Strings-->
    <!-- Default Privileges for new login added to Subscriber Account -->
    <add key="DefaultPrivBMask_AddedLogin" value="0"/>
    <!-- END of NEW SUBSCRIBER SqlServerOperations Strings 207-->
    <add key="baseaddressForMySvc" value="http://rents/happymeal80/TesterSvc"/>
    <add key="serverForMySvc" value="rents"/>
    <add key="StartupServicesBitmask" value="1743"/><!--719-->
    <!-- A Bunch of them -->
    <add key="ValidServicesBitmask" value="271"/>
    <!-- Both DisService and DatService -->
    <!--<add key="ValidServicesBitmask" value="1610612736"/>-->
    <!-- Only DisService -->
    <!--
	  <add key="ValidServicesBitmask" value="536870912"/>
	  -->
    <!-- Only DatService -->
    <!--
	  <add key="ValidServicesBitmask" value="1073741824"/>
	  -->
    <!-- No Valid Services -->
    <!--
	  <add key="ValidServicesBitmask" value="128"/>
	  -->
    <add key="log4netConfigFile" value="C:\HappyMeal\HostingContainer\HostingContainer\bin\Debug\log4net.config"/>
    <!--<add key="httpBaseAddress" value="https://www.perceptrics.myhpoffice.com/hm" />-->
    <add key="httpBaseAddress" value="https://perceptricsresearch.com/hm"/>
    <add key="ClientSettingsProvider.ServiceUri" value=""/>
  </appSettings>
  <system.web>
    <compilation debug="true"/>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri=""/>
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400"/>
      </providers>
    </roleManager>
  </system.web>
  <!-- When deploying the service library project, the content of the config file must be added to the host's 
  app.config file. System.Configuration does not support config files for libraries. -->
  <system.serviceModel>
    <services>
      <service name="CrossDomainSvcNS.CrossDomainSvc">
        <endpoint address="https://perceptricsresearch.com/" binding="webHttpBinding" 
                  bindingConfiguration="securewebhttpbinding" 
                  contract="ICrossDomainNS.ICrossDomain" 
                  behaviorConfiguration="HttpEnableBehavior"/>
        <!--<endpoint address="http://leases:8050/" binding="webHttpBinding" contract="ICrossDomainNS.ICrossDomain" behaviorConfiguration="HttpEnableBehavior" />-->
      <!--<host>
          <baseAddresses>
            <add baseAddress="http://leases/"/>
          </baseAddresses>
        </host>
        <endpoint address="" 
                  binding="webHttpBinding"  
                  contract="ICrossDomainNS.ICrossDomain"
                  behaviorConfiguration="HttpEnableBehavior"/>-->
      </service>
      <service name="ImageSvcNS.ImageSvc" behaviorConfiguration="ImageSvcNS.ImageSvcBehavior">
        <!--<endpoint address="https://perceptricsresearch.com/ImageSvc/" binding="webHttpBinding"
                  bindingConfiguration="securewebhttpbinding"
                  contract="IImageSvcNS.IImageSvc"
                  behaviorConfiguration="HttpEnableBehavior"/>
        <endpoint address="https://perceptricsresearch.com/ImageSvc/mex"
                  binding="mexHttpsBinding"
                  contract="IMetadataExchange" />-->
        <endpoint address="http://perceptricsresearch.com/ImageSvc/" binding="webHttpBinding"
          bindingConfiguration="openwebhttpbinding"
          contract="IImageSvcNS.IImageSvc"
          behaviorConfiguration="HttpEnableBehavior"/>
        <endpoint address="http://perceptricsresearch.com/ImageSvc/mex"
                  binding="mexHttpBinding"
                  contract="IMetadataExchange" />
      </service>
      
      
      <service name="LogInSvcNS.LogInSvc" behaviorConfiguration="LogInSvcNS.LogInSvcBehavior">
        <!--<endpoint address="https://www.perceptrics.myhpoffice.com/hm/LogInSvc/" 
                  binding="customBinding" 
                  bindingConfiguration="binaryHttpSBinding" 
                  contract="ILogInSvc.ILogInSvc">
        </endpoint>-->
        <endpoint address="https://perceptricsresearch.com/hm/LogInSvc/" 
                  binding="customBinding" 
                  bindingConfiguration="binaryHttpSBinding" 
                  contract="ILogInSvc.ILogInSvc">
        </endpoint>
        <endpoint address="https://perceptricsresearch.com/hm/LogInSvc/mex"
                  binding="mexHttpsBinding"
                  contract="IMetadataExchange" />
        
      </service>
      <service name="AdministratorSvcNS.AdministratorSvc" behaviorConfiguration="OpenAdministratorSvcNS.AdministratorSvcBehavior">
        <!--<endpoint address="https://perceptricsresearch.com/hm/AdministratorSvc/"
                  binding="customBinding"
                  bindingConfiguration="binaryHttpSBinding"
                  contract="IAdministratorSvcNS.IAdministratorSvc">
        </endpoint>-->
        <endpoint address="http://perceptricsresearch.com/hm/AdministratorSvc/" binding="webHttpBinding"
              bindingConfiguration="openwebhttpbinding"
              contract="IAdministratorSvcNS.IAdministratorSvc"
              behaviorConfiguration="HttpEnableBehavior"/>
        <endpoint address="http://perceptricsresearch.com/hm/AdministratorSvc/mex"
                  binding="mexHttpBinding"
                  contract="IMetadataExchange" />
        <endpoint address="http://perceptricsresearch.com/hm/basic/AdministratorSvc/"
                  binding="basicHttpBinding" bindingConfiguration="basicHttpBinding_open"
                  contract="IAdministratorSvcNS.IAdministratorSvc" />
      <!--<endpoint address="" binding="basicHttpBinding" contract="IAdministratorSvcNS.IAdministratorSvc">
          <identity>
            <dns value="leases" />
          </identity>
        </endpoint>-->

      <endpoint address="https://perceptricsresearch.com/hm/AdministratorSvc/mex" 
                binding="mexHttpsBinding" 
                contract="IMetadataExchange" />
        <!--<host>
          <baseAddresses>
            <add baseAddress="http://leases:8005/hm/AdministratorSvc/" />
          </baseAddresses>
        </host>-->
      </service>
      <service name="AuthoringSvcNS.AuthoringSvc" behaviorConfiguration="AuthoringSvcNS.AuthoringSvcBehavior">
        <!--<endpoint address="https://leases/hm/AuthoringSvc/" binding="webHttpBinding"
         bindingConfiguration="openwebhttpbinding"
         contract="IAuthoringSvcNS.IAuthoringSvc"
         behaviorConfiguration="HttpEnableBehavior"/>-->
        <!--<endpoint address="https://leases/hm/AuthoringSvc/"
                  binding="customBinding"
                  bindingConfiguration="binaryHttpSBinding"
                  contract="IAuthoringSvcNS.IAuthoringSvc">
        </endpoint>
        <endpoint address="https://leases/hm/AuthoringSvc/mex"
                  binding="mexHttpsBinding"
                  contract="IMetadataExchange" />-->
      </service>

      <service name="RespProviderSvcLibr.RespProviderSvc" behaviorConfiguration="RespProviderSvcLibr.RespProviderSvcBehavior">
        <!--<endpoint address="https://leases/hm/RespProviderSvcLibr.RespProviderSvc/"
          binding="customBinding"
          bindingConfiguration="binaryHttpSBinding"
          contract="IRespProviderSvcNS.IRespProviderSvc">
        </endpoint>
        <endpoint address="https://leases/hm/RespProviderSvcLibr.RespProviderSvc/mex"
                  binding="mexHttpsBinding"
                  contract="IMetadataExchange" />-->
        <!--
        <host>
          <baseAddresses>
            <add baseAddress="http://leases:8005/hm/RespProviderSvcLibr.RespProviderSvc/" />
          </baseAddresses>
        </host>-->
      </service>
      
      <service name="RsltsProviderSvcLibr.ResultsSvc" behaviorConfiguration="RsltsProviderSvcLibr.ResultsSvcBehavior">
        <!--<endpoint address="https://leases/hm/ResultsSvc/" binding="webHttpBinding"
        bindingConfiguration="openwebhttpbinding"
        contract="IResultsProviderSvcNS.IResultsSvc"
        behaviorConfiguration="HttpEnableBehavior"/>-->
        <!--<endpoint address="https://leases/hm/ResultsSvc/"
          binding="customBinding"
          bindingConfiguration="binaryHttpSBinding"
          contract="IResultsProviderSvcNS.IResultsSvc">
        </endpoint>
        <endpoint address="https://leases/hm/ResultsSvc/mex"
                  binding="mexHttpsBinding"
                  contract="IMetadataExchange" />-->
        <!--
        <host>
          <baseAddresses>
            <add baseAddress="http://leases:8005/hm/ResultsSvc/" />
          </baseAddresses>
        </host>-->
      </service>
     
      <service name="WCFSvcLibr1.RespDispatcherSvc" behaviorConfiguration="WCFSvcLibr1.RespDispatcherSvcBehavior">
        <!-- Define NetMsmqEndpoint -->
        <endpoint address="net.msmq://vsfirst/private/dispatcherresponses" binding="netMsmqBinding" bindingConfiguration="NetMsmqBinding_IRespDispatcherSvc" contract="IRespDispatcherSvcNS.IRespDispatcherSvc"/>
        <!--<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />-->
      </service>
      <service name="ResponsePostingSvcLibr1.PostResponsetoSurveySvc" behaviorConfiguration="ResponsePostingSvcLibr1.PostResponsetoSurveySvcBehavior">
        <!--is done at runtime in CommandSupport.Startcmd...-->
        <!-- Define NetMsmqEndpoint -->
        <!--<endpoint address="net.msmq://rents/private/happymealresponses"
                  binding="netMsmqBinding"
                  bindingConfiguration="NetMsmqBinding_IPostResponsetoSurveySvc"
                  contract="IPostResponsetoSurveySvcNS.IPostResponsetoSurveySvc"/>-->
      </service>
    </services>
    <behaviors>
      <endpointBehaviors>
        <behavior name="HttpEnableBehavior">
          <webHttp helpEnabled="True"/>
          <!--<enableWebScript/>-->
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="LogInSvcNS.LogInSvcBehavior">
          <!--<serviceMetadata httpsGetEnabled="true" httpsGetUrl="https://leases/hm/LogInSvc/mex"
                           httpGetEnabled="false"/>-->
          <serviceMetadata httpGetEnabled="false" />
          <serviceDebug includeExceptionDetailInFaults="false"/>
          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="LogInSvcNS.MyValidator, LogInSvcNS "/>
            <serviceCertificate storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectName" findValue="perceptricsresearch.com"/>
            <clientCertificate>
              <authentication certificateValidationMode="None" revocationMode="NoCheck"/>
            </clientCertificate>
            <!--<windowsAuthentication allowAnonymousLogons="true" />-->
          </serviceCredentials>
        </behavior>
        <behavior name="AuthoringSvcNS.AuthoringSvcBehavior">
          <!--<serviceMetadata httpsGetEnabled="true" httpsGetUrl="https://leases/hm/AuthoringSvc/mex"
                           httpGetEnabled="false"/>-->
          <serviceMetadata httpGetEnabled="false"/>
          <serviceDebug includeExceptionDetailInFaults="False"/>
          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="LogInSvcNS.MyOtherValidator, LogInSvcNS "/>
            <serviceCertificate storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectName" findValue="perceptricsresearch.com"/>
            <clientCertificate>
              <authentication certificateValidationMode="None" revocationMode="NoCheck"/>
            </clientCertificate>
            <!--<windowsAuthentication allowAnonymousLogons="true" />-->
          </serviceCredentials>
        </behavior>
        <behavior name="RsltsProviderSvcLibr.ResultsSvcBehavior">
          <!--<serviceMetadata httpsGetEnabled="true" httpsGetUrl="https://leases/hm/RespProviderSvcLibr.RespProviderSvc/mex"
                          httpGetEnabled="false"/>-->
          <serviceMetadata httpGetEnabled="false"/>
          <serviceDebug includeExceptionDetailInFaults="False"/>
          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="LogInSvcNS.MyOtherValidator, LogInSvcNS "/>
            <serviceCertificate storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectName" findValue="perceptricsresearch.com"/>
            <clientCertificate>
              <authentication certificateValidationMode="None" revocationMode="NoCheck"/>
            </clientCertificate>
            <!--<windowsAuthentication allowAnonymousLogons="true" />-->
          </serviceCredentials>
        </behavior>
 
        <behavior name="RespProviderSvcLibr.RespProviderSvcBehavior">
          <!--<serviceMetadata httpsGetEnabled="true" httpsGetUrl="https://leases/hm/ResultsSvc/mex"
                          httpGetEnabled="false"/>-->
          <serviceMetadata httpGetEnabled="false"/>
          <serviceDebug includeExceptionDetailInFaults="false"/>
          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="LogInSvcNS.MyOtherValidator, LogInSvcNS "/>
            <serviceCertificate storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectName" findValue="perceptricsresearch.com"/>
            <clientCertificate>
              <authentication certificateValidationMode="None" revocationMode="NoCheck"/>
            </clientCertificate>
            <!--<windowsAuthentication allowAnonymousLogons="true" />-->
          </serviceCredentials>
        </behavior>
        <behavior name="WCFSvcLibr1.RespDispatcherSvcBehavior">
          <serviceMetadata httpGetEnabled="false"/>
          <serviceDebug includeExceptionDetailInFaults="False"/>
        </behavior>
        <behavior name="ResponsePostingSvcLibr1.PostResponsetoSurveySvcBehavior">
          <serviceMetadata httpGetEnabled="false"/>
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>
        <behavior name="AdministratorSvcNS.AdministratorSvcBehavior">
          <serviceMetadata httpsGetEnabled="false"  
                          httpGetEnabled="false"/>
          <!--<serviceMetadata httpsGetEnabled="true"  httpsGetUrl="https://leases/hm/AdministratorSvc/mex"
                           httpGetEnabled="false"/>-->
          <!--<serviceMetadata httpGetEnabled="true" httpGetUrl="http://leases/hm/AdministratorSvc/mex"/>-->
          <serviceDebug includeExceptionDetailInFaults="false"/>
          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="Custom" 
                                    customUserNamePasswordValidatorType="AdministratorSvcNS.MyAdminSvcValidator, AdministratorSvcNS "/>
            <serviceCertificate storeLocation="LocalMachine" 
                                storeName="My" x509FindType="FindBySubjectName" findValue="perceptricsresearch.com"/>
            <clientCertificate>
              <authentication certificateValidationMode="None" revocationMode="NoCheck"/>
            </clientCertificate>
            <!--<windowsAuthentication allowAnonymousLogons="true" />-->
          </serviceCredentials>
        </behavior>
        <behavior name="OpenAdministratorSvcNS.AdministratorSvcBehavior">
          <!--<serviceMetadata httpsGetEnabled="false"
                          httpGetEnabled="false"/>-->
          <!--<serviceMetadata httpsGetEnabled="true"  httpsGetUrl="https://leases/ImageSvc/mex"
                           httpGetEnabled="false"/>-->
          <serviceMetadata httpGetEnabled="true" httpGetUrl="http://perceptricsresearch.com/hm/AdministratorSvc/mex"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
        <behavior name="ImageSvcNS.ImageSvcBehavior">
          <!--<serviceMetadata httpsGetEnabled="false"
                          httpGetEnabled="false"/>-->
          <!--<serviceMetadata httpsGetEnabled="true"  httpsGetUrl="https://leases/ImageSvc/mex"
                           httpGetEnabled="false"/>-->
          <serviceMetadata httpGetEnabled="true" httpGetUrl="http://perceptricsresearch.com/ImageSvc/mex"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <bindings>
      <customBinding>

        <binding name="binaryHttpSBinding" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00">
          <security authenticationMode="UserNameOverTransport"/>
          <binaryMessageEncoding>
            <readerQuotas maxStringContentLength="60000000" maxArrayLength="60000000" maxNameTableCharCount="60000000" maxBytesPerRead="60000000" maxDepth="40000"/>
          </binaryMessageEncoding>
          <httpsTransport maxBufferSize="2147483647" maxReceivedMessageSize="2147483647"/>
        </binding>
      </customBinding>
      <basicHttpBinding>
        <binding name="basicHttpBinding_open" maxBufferSize="50000000" maxBufferPoolSize="50000000" maxReceivedMessageSize="50000000">
          <readerQuotas maxArrayLength="50000000" maxBytesPerRead="50000000" maxDepth="50000000" maxNameTableCharCount="50000000" maxStringContentLength="50000000"/>
          <security mode="None">
            <transport clientCredentialType="None"/>
          </security>
        </binding>

      </basicHttpBinding>
 
      <netMsmqBinding>
        <!--Probably don't need bot of these bindingconfigs....just reference the same one in the -->
        <binding name="NetMsmqBinding_IRespDispatcherSvc" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" deadLetterQueue="System" durable="true" exactlyOnce="true" maxReceivedMessageSize="65536" maxRetryCycles="0" receiveErrorHandling="Fault" receiveRetryCount="5" retryCycleDelay="00:30:00" timeToLive="1.00:00:00" useSourceJournal="false" useMsmqTracing="false" queueTransferProtocol="Native" maxBufferPoolSize="524288" useActiveDirectory="false">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          <security mode="None">
            <transport msmqAuthenticationMode="WindowsDomain" msmqEncryptionAlgorithm="RC4Stream" msmqProtectionLevel="Sign" msmqSecureHashAlgorithm="Sha1"/>
            <message clientCredentialType="Windows"/>
          </security>
        </binding>
        <binding name="NetMsmqBinding_IPostResponsetoSurveySvc" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" deadLetterQueue="System" durable="true" exactlyOnce="true" maxReceivedMessageSize="65536" maxRetryCycles="2" receiveErrorHandling="Fault" receiveRetryCount="5" retryCycleDelay="00:30:00" timeToLive="1.00:00:00" useSourceJournal="false" useMsmqTracing="false" queueTransferProtocol="Native" maxBufferPoolSize="524288" useActiveDirectory="false">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          <security mode="None">
            <transport msmqAuthenticationMode="WindowsDomain" msmqEncryptionAlgorithm="RC4Stream" msmqProtectionLevel="Sign" msmqSecureHashAlgorithm="Sha1"/>
            <message clientCredentialType="Windows"/>
          </security>
        </binding>
      </netMsmqBinding>
      <webHttpBinding>
        <binding name="securewebhttpbinding">
          <security mode="Transport"/>
        </binding>
        <binding name="openwebhttpbinding" crossDomainScriptAccessEnabled="true">
          <!--<security mode="Transport"/>-->
        </binding>
      </webHttpBinding>
    </bindings>
    <client>
      <endpoint address="net.msmq://vsfirst/private/dispatcherresponses" 
                binding="netMsmqBinding" 
                contract="RespDispatchSvc.IRespDispatcherSvc" 
                bindingConfiguration="NetMsmqBinding_IRespDispatcherSvc" 
                name="NetMsmqBinding_IRespDispatcherSvc"/>
 
    </client>
  </system.serviceModel>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/></startup></configuration>
